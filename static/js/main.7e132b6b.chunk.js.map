{"version":3,"sources":["components/ImageCard/index.js","components/Wrapper/index.js","components/ContainerMain/index.js","components/Title/index.js","components/Instructions/index.js","App.js","index.js"],"names":["ImageCard","props","className","alt","name","src","image","id","onClick","shuffleImg","Wrapper","children","ContainerMain","Title","message","score","topScore","Instructions","App","state","images","userChoice","includes","length","setState","push","i","j","Math","floor","random","this","map","character","key","Component","ReactDOM","render","document","getElementById"],"mappings":"4/EAceA,MAXf,SAAmBC,GACf,OACI,yBAAKC,UAAU,QACX,yBAAKA,UAAU,iBACX,yBAAKC,IAAKF,EAAMG,KAAMC,IAAKJ,EAAMK,MAAOC,GAAIN,EAAMM,GAC9CC,QAAS,kBAAMP,EAAMQ,WAAWR,EAAMM,U,aCD3CG,MAJf,SAAiBT,GACb,OAAO,yBAAKC,UAAU,WAAWD,EAAMU,W,MCG5BC,MAJf,SAAuBX,GACnB,OAAO,yBAAKC,UAAU,aAAaD,EAAMU,WCgB9BE,G,MAjBD,SAACZ,GACX,OACI,yBAAKC,UAAU,UACb,4BACE,2CACA,4BAAKD,EAAMa,SACX,qCAEG,IAAMb,EAAMc,MAAQ,IAFvB,eAIG,IAAMd,EAAMe,cCDZC,G,MARM,SAAChB,GACpB,OACE,4BAAQC,UAAU,SAChB,8ICuESgB,G,kNAlEbC,MAAQ,CACNC,SACAL,MAAQ,EACRD,QAAU,mBACVO,WAAY,GACZL,SAAU,G,EAGZP,WAAa,SAAAF,GACX,IAAIc,EAAa,EAAKF,MAAME,WAE5B,GAAIA,EAAWC,SAASf,GAMpB,OAJIc,EAAWE,OAAS,EAAKJ,MAAMH,UACjC,EAAKQ,SAAS,CAACR,SAAUK,EAAWE,cAEtC,EAAKC,SAAS,CAACT,MAAO,EAAGM,WAAY,GAAIP,QAAS,iDAMtD,GAFEO,EAAWI,KAAKlB,GAEQ,KAAtBc,EAAWE,OAAf,CAKA,EAAKC,SAAS,CAAEJ,SAAQL,MAAQM,EAAWE,OAAQT,QAAS,uBAE1D,IAAK,IAAIY,EAAIN,EAAOG,OAAS,EAAGG,EAAI,EAAGA,IAAK,CAC1C,IAAIC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADE,EAEf,CAACN,EAAOO,GAAIP,EAAOM,IAA7CN,EAAQM,GAFiC,KAE7BN,EAAQO,GAFqB,WAN5C,EAAKH,SAAS,CAACT,MAAO,GAAID,QAAS,yCAA0CO,WAAW,M,uDAclF,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CACEP,QAASiB,KAAKZ,MAAML,QACpBC,MAAOgB,KAAKZ,MAAMJ,MAClBC,SAAUe,KAAKZ,MAAMH,WAEvB,kBAAC,EAAD,MACE,kBAAC,EAAD,KACGe,KAAKZ,MAAMC,OAAOY,KAAI,SAAAC,GAAS,OAC9B,kBAAC,EAAD,CACExB,WAAY,EAAKA,WACjBF,GAAI0B,EAAU1B,GACd2B,IAAKD,EAAU1B,GACfD,MAAO2B,EAAU3B,YAIzB,gCACE,uBAAGJ,UAAU,QAAb,uC,GA3DQiC,cCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7e132b6b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction ImageCard(props) {\r\n    return(\r\n        <div className=\"card\">\r\n            <div className=\"img-container\">\r\n                <img alt={props.name} src={props.image} id={props.id}\r\n                    onClick={() => props.shuffleImg(props.id)} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageCard","import React from \"react\";\r\nimport \"./style.css\"\r\n\r\nfunction Wrapper(props) {\r\n    return <div className=\"wrapper\">{props.children}</div>\r\n}\r\n\r\nexport default Wrapper;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction ContainerMain(props) {\r\n    return <div className=\"container\">{props.children}</div>\r\n}\r\n\r\nexport default ContainerMain;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Title = (props) => {\r\n    return (\r\n        <nav className=\"navbar\">\r\n          <ul>\r\n            <li>Clicky Game</li>\r\n            <li>{props.message}</li>\r\n            <li> \r\n              Score:\r\n              {\" \" + props.score + \" \"} \r\n              | Top Score: \r\n              {\" \" + props.topScore}\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n    );   \r\n};\r\n\r\nexport default Title;","import React from 'react';\r\nimport \"./style.css\"\r\n\r\n\r\nconst Instructions = (props) => {\r\n  return (\r\n    <header className=\"rules\">\r\n      <h2>Click on a image to start. You will score points for every image you click that hasn't been clicked before!</h2>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Instructions;","import React, { Component } from 'react';\nimport ImageCard from './components/ImageCard';\nimport images from './images.json';\nimport Wrapper from './components/Wrapper';\nimport ContainerMain from './components/ContainerMain'\nimport Title from './components/Title'\nimport Instructions from './components/Instructions'\nimport './App.css'\n\n\nclass App extends Component {\n\n  state = {\n    images,\n    score : 0,\n    message : \"Test your memory\",\n    userChoice: [],\n    topScore: 0\n  };\n\n  shuffleImg = id => {\n    let userChoice = this.state.userChoice;\n\n    if (userChoice.includes(id)) {\n    \n        if (userChoice.length > this.state.topScore) {\n          this.setState({topScore: userChoice.length})\n        }\n        this.setState({score: 0, userChoice: [], message: \"OOPs!! Game Over.  Pick an image to restart.\"});\n        return;\n\n      } else {\n      userChoice.push(id)\n\n    if (userChoice.length === 12) {\n      this.setState({score: 12, message: \"You win.  Click an image to play again\", userChoice:[]});\n      return;\n    }\n\n    this.setState({ images, score : userChoice.length, message: \"You're doing good!\"});\n\n      for (let i = images.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [images [i], images [j]] = [images[j], images[i]];\n      }\n    }\n  }\n\n\n  render() {\n    return (\n      <Wrapper>\n        <Title\n          message={this.state.message}\n          score={this.state.score}\n          topScore={this.state.topScore}\n        />\n        <Instructions></Instructions>\n          <ContainerMain>\n            {this.state.images.map(character => (\n              <ImageCard\n                shuffleImg={this.shuffleImg}\n                id={character.id}\n                key={character.id}\n                image={character.image}\n              />\n            ))}\n          </ContainerMain>\n        <footer>\n          <p className=\"foot\">Clicky Game by C. Shane Brown</p>\n        </footer>\n      </Wrapper>\n    );\n  }\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}